name: deploy to server
on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:
    inputs:
      hostname:
        required: true
        description: "Hostname to deploy"
        default: "mactep.info"
      image:
        required: true
        description: "image to deploy"
        default: "earthquake-image"
      label:
        required: true
        description: "label to deploy"
        default: "nightbuild"
      container_name:
        required: true
        description: "name for container"
        default: "event-reader"
jobs:
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.4
        with:
          HOST: ${{ github.event.inputs.hostname }}
          USERNAME: ${{ secrets.STAGING_SSH_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            container_name='${{ github.event.inputs.container_name }}'
            image='${{ github.event.inputs.image }}'
            label='${{ github.event.inputs.label }}'
            user_name_for_docker='${{ github.repository_owner }}'  
            token_for_docker='${{ secrets.TOKEN_FOR_DOCKER_AUTH }}'
            repository=docker.pkg.github.com/antonovdmitriy/earthquake
            # Stop running container
            docker stop $container_name
            # Remove old container
            docker rm $container_name  
            # Login to Github Container Registry
            docker login $repository -u $user_name_for_docker -p $token_for_docker
            # Pull the Docker Image 
            docker pull $repository/$image:$label
            # Run a new container from a new image
            docker run -d --name $container_name $repository/$image:$label